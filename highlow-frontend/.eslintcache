[{"E:\\Code\\HighLowArtist\\highlow-frontend\\src\\index.js":"1","E:\\Code\\HighLowArtist\\highlow-frontend\\src\\components\\Header\\Header.js":"2","E:\\Code\\HighLowArtist\\highlow-frontend\\src\\container\\App.js":"3","E:\\Code\\HighLowArtist\\highlow-frontend\\src\\components\\Game\\Artist\\Artist.js":"4","E:\\Code\\HighLowArtist\\highlow-frontend\\src\\components\\Game\\Game.js":"5"},{"size":230,"mtime":1609387963727,"results":"6","hashOfConfig":"7"},{"size":197,"mtime":1609559088678,"results":"8","hashOfConfig":"7"},{"size":239,"mtime":1609388019968,"results":"9","hashOfConfig":"7"},{"size":413,"mtime":1609561485023,"results":"10","hashOfConfig":"7"},{"size":3685,"mtime":1609561949993,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7s7z3n",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"E:\\Code\\HighLowArtist\\highlow-frontend\\src\\index.js",[],"E:\\Code\\HighLowArtist\\highlow-frontend\\src\\components\\Header\\Header.js",[],"E:\\Code\\HighLowArtist\\highlow-frontend\\src\\container\\App.js",[],["24","25"],"E:\\Code\\HighLowArtist\\highlow-frontend\\src\\components\\Game\\Artist\\Artist.js",["26"],"E:\\Code\\HighLowArtist\\highlow-frontend\\src\\components\\Game\\Game.js",["27","28"],"import React, { Component } from 'react';\r\nimport FastAverageColor from 'fast-average-color';\r\nimport axios from 'axios';\r\nimport Artist from './Artist/Artist';\r\nimport './Game.css';\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    score: 0,\r\n    artists: [\r\n      {\r\n        externalUrls: {\r\n          spotify: '',\r\n        },\r\n        followers: {\r\n          href: null,\r\n          total: 0,\r\n        },\r\n        genres: [],\r\n        href: '',\r\n        id: '',\r\n        images: [\r\n          {\r\n            height: 640,\r\n            width: 640,\r\n            url: '',\r\n          },\r\n          {\r\n            height: 320,\r\n            width: 320,\r\n            url: '',\r\n          },\r\n          {\r\n            height: 160,\r\n            width: 160,\r\n            url: '',\r\n          },\r\n        ],\r\n        name: '',\r\n        popularity: 0,\r\n        type: 'artist',\r\n        uri: '',\r\n      },\r\n      {\r\n        externalUrls: {\r\n          spotify: '',\r\n        },\r\n        followers: {\r\n          href: null,\r\n          total: 0,\r\n        },\r\n        genres: [],\r\n        href: '',\r\n        id: '',\r\n        images: [\r\n          {\r\n            height: 640,\r\n            width: 640,\r\n            url: '',\r\n          },\r\n          {\r\n            height: 320,\r\n            width: 320,\r\n            url: '',\r\n          },\r\n          {\r\n            height: 160,\r\n            width: 160,\r\n            url: '',\r\n          },\r\n        ],\r\n        name: '',\r\n        popularity: 0,\r\n        type: 'artist',\r\n        uri: '',\r\n      },\r\n    ],\r\n    avgColor: [],\r\n    gameOver: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getArtist();\r\n  }\r\n\r\n  getArtist() {\r\n    axios\r\n      .get('http://localhost:5000/api/artists') //TODO: make enviroment variable\r\n      .then((res) => {\r\n        console.log('response', res.data);\r\n        this.setState({ artists: res.data });\r\n        console.log('state:', this.state.artists);\r\n      })\r\n      .catch((e) => {\r\n        console.log('error:', e);\r\n      });\r\n  }\r\n\r\n  artistClickHandler = (id, e) => {\r\n    if (id === this.state.artists[0].id) {\r\n      if (this.state.artists[0].popularity > this.state.artists[1].popularity) {\r\n        this.increaseScore();\r\n      } else {\r\n        this.resetScore();\r\n      }\r\n    } else {\r\n      if (this.state.artists[0].popularity < this.state.artists[1].popularity) {\r\n        this.increaseScore();\r\n      } else {\r\n        this.resetScore();\r\n      }\r\n    }\r\n    this.getArtist();\r\n  };\r\n\r\n  increaseScore = () => {\r\n    this.setState((state) => {\r\n      // Important: read `state` instead of `this.state` when updating.\r\n      return { score: state.score + 1 };\r\n    });\r\n  };\r\n\r\n  resetScore = () => {\r\n    this.setState({ score: 0 });\r\n  };\r\n\r\n  render() {\r\n    //TODO: map <Artist /> instead of current implementation\r\n    return (\r\n      <div className='game'>\r\n        <div className='row score'>\r\n          <h3>Score: {this.state.score}</h3>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='column'>\r\n            <Artist\r\n              clicked={this.artistClickHandler}\r\n              imageURL={this.state.artists[0].images[1].url}\r\n              name={this.state.artists[0].name}\r\n              id={this.state.artists[0].id}\r\n            />\r\n          </div>\r\n          <div className='column'>\r\n            <Artist\r\n              clicked={this.artistClickHandler}\r\n              imageURL={this.state.artists[1].images[1].url}\r\n              name={this.state.artists[1].name}\r\n              id={this.state.artists[1].id}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":2,"column":8,"nodeType":"35","messageId":"36","endLine":2,"endColumn":24},{"ruleId":"33","severity":1,"message":"34","line":2,"column":8,"nodeType":"35","messageId":"36","endLine":2,"endColumn":24},{"ruleId":"37","severity":1,"message":"38","line":8,"column":3,"nodeType":"39","messageId":"40","endLine":10,"endColumn":4},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'FastAverageColor' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]